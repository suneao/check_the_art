[gd_resource type="ShaderMaterial" load_steps=5 format=3 uid="uid://cub4yb51tawqa"]

[ext_resource type="Texture2D" uid="uid://dwvoay8ngwxo" path="res://resources/texture/painted_concrete_02_4k.gltf/textures/painted_concrete_02_diff_4k.jpg" id="1_dqhqn"]
[ext_resource type="Texture2D" uid="uid://djwjvmrg7usaa" path="res://resources/texture/painted_concrete_02_4k.gltf/textures/painted_concrete_02_arm_4k.jpg" id="2_b22x6"]
[ext_resource type="Texture2D" uid="uid://wutf6l0qnen5" path="res://resources/texture/painted_concrete_02_4k.gltf/textures/painted_concrete_02_nor_gl_4k.jpg" id="3_di48m"]

[sub_resource type="Shader" id="Shader_xh04u"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_g, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
uniform float normal_scale : hint_range(-16.0, 16.0);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(0.0, 1.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;

	// Normal Map: Enabled
	NORMAL_MAP = texture(texture_normal, base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
}
"

[resource]
resource_name = "painted_concrete_02"
render_priority = 0
shader = SubResource("Shader_xh04u")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/texture_albedo = ExtResource("1_dqhqn")
shader_parameter/albedo_texture_size = Vector2i(4096, 4096)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/texture_metallic = ExtResource("2_b22x6")
shader_parameter/metallic_texture_channel = Vector4(0, 0, 1, 0)
shader_parameter/texture_roughness = ExtResource("2_b22x6")
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/texture_normal = ExtResource("3_di48m")
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
